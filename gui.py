#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Feb 12, 2021 08:57:35 PM JST  platform: Windows NT

import sys

from tkinter import *

import tkinter.ttk as ttk

import time
import threading

from game_manager import GameManager


cc = 0
root = Tk()
var = StringVar()


# It is implemented as a thread to operate independently of any routine.
# reference by https://www.tutorialspoint.com/python/python_multithreading.htm
class DisplayUpdateThread(threading.Thread):
    def __init__(self, threadID, name, counter):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.counter = counter

    def run(self):
        global gm
        global root

        # bg update

        # slot update
        while True:
            unit_slot = gm.unit_slot
            for slot in unit_slot:

                # Character Image Update
                cx, cy = slot.character_position
                root.Battler.create_image(cx, cy, anchor=NW, image=slot.character_image)

                # hp update
                slot.hp_string_var.set(slot.unit.hp_for_display())

                # Level update
                lx, ly = slot.rank_position
                root.Battler.create_image(lx, ly, anchor=NW, image=slot.rank_image)

                global cc
                var.set(str(cc))

                if cc < 10:
                    cc += 1
                else:
                    cc = 0

            time.sleep(0.1) # 0.1 seconds


def core_loop():
    global gm
    global root

    gm.turn()
    root.after(0, core_loop)


def init_canvas(canvas, unit_slot):
    ''' First, Static Data are Created on Canvas Object'''
    for slot in unit_slot:
        hp_label = Label(canvas, textvariable=slot.hp_string_var)
        hp_x, hp_y = slot.hp_position
        canvas.create_window(hp_x, hp_y, anchor=NW, window=hp_label)

        name_label = Label(canvas, textvariable=slot.name_string_var)
        name_x, name_y = slot.name_position
        canvas.create_window(name_x, name_y, anchor=NW, window=name_label)

        slot.hp_string_var.set(slot.unit.hp_for_display())
        slot.name_string_var.set(slot.unit.name)




if __name__ == '__main__':

    _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
    _fgcolor = '#000000'  # X11 color: 'black'
    _compcolor = '#d9d9d9'  # X11 color: 'gray85'
    _ana1color = '#d9d9d9'  # X11 color: 'gray85'
    _ana2color = '#ececec'  # Closest X11 color: 'gray92'

    root.geometry("640x480")
    root.title("PSB Group 9")
    root.style = ttk.Style()
    if sys.platform == "win32":
        root.style.theme_use('winnative')
    root.style.configure('.', background=_bgcolor)
    root.style.configure('.', foreground=_fgcolor)
    root.style.configure('.', font="TkDefaultFont")
    root.style.map('.', background=
    [('selected', _compcolor), ('active', _ana2color)])

    root.configure(background="#d9d9d9")
    root.configure(highlightbackground="#d9d9d9")
    root.configure(highlightcolor="black")

    menubar = Menu(font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
    root.configure(menu=menubar)

    root.Battler = Canvas(root)
    root.Battler.place(relx=0.281, rely=0.0, relheight=1.0, relwidth=0.719)
    root.Battler.configure(background="#d9d9d9")
    root.Battler.configure(borderwidth="2")
    root.Battler.configure(highlightbackground="#d9d9d9")
    root.Battler.configure(highlightcolor="black")
    root.Battler.configure(insertbackground="black")
    root.Battler.configure(relief="ridge")
    root.Battler.configure(selectbackground="blue")
    root.Battler.configure(selectforeground="white")

    root.Label1 = Label(root)
    root.Label1.place(relx=0.013, rely=0.013, height=21, width=34)
    root.Label1.configure(activebackground="#f9f9f9")
    root.Label1.configure(activeforeground="black")
    root.Label1.configure(background="#d9d9d9")
    root.Label1.configure(disabledforeground="#a3a3a3")
    root.Label1.configure(foreground="#000000")
    root.Label1.configure(highlightbackground="#d9d9d9")
    root.Label1.configure(highlightcolor="black")
    root.Label1.configure(text='''Coin''')

    root.TSeparator1 = ttk.Separator(root)
    root.TSeparator1.place(relx=0.0, rely=0.063, relwidth=0.281)

    root.Button1 = Button(root, command=lambda x: print('1'))
    root.Button1.place(relx=0.016, rely=0.083, height=24, width=24)
    root.Button1.configure(activebackground="#ececec")
    root.Button1.configure(activeforeground="#000000")
    root.Button1.configure(background="#d9d9d9")
    root.Button1.configure(disabledforeground="#a3a3a3")
    root.Button1.configure(foreground="#000000")
    root.Button1.configure(highlightbackground="#d9d9d9")
    root.Button1.configure(highlightcolor="black")
    root.Button1.configure(pady="0")
    root.Button1.configure(text='''C''')

    root.lblCoin = Label(root, textvariable=var)
    root.lblCoin.place(relx=0.066, rely=0.083, height=21, width=124)
    root.lblCoin.configure(background="#d9d9d9")
    root.lblCoin.configure(disabledforeground="#a3a3a3")
    root.lblCoin.configure(foreground="#000000")
    root.lblCoin.configure(text='''314,159''')

    root.TSeparator2 = ttk.Separator(root)
    root.TSeparator2.place(relx=0.0, rely=0.152, relwidth=0.283)

    root.Label2 = Label(root)
    root.Label2.place(relx=0.013, rely=0.167, height=21, width=164)
    root.Label2.configure(background="#d9d9d9")
    root.Label2.configure(disabledforeground="#a3a3a3")
    root.Label2.configure(foreground="#000000")
    root.Label2.configure(text='''Game Log''')

    root.txtLogBox = Text(root)
    root.txtLogBox.place(relx=0.0, rely=0.221, relheight=0.623, relwidth=0.284)
    root.txtLogBox.configure(background="white")
    root.txtLogBox.configure(font="TkTextFont")
    root.txtLogBox.configure(foreground="black")
    root.txtLogBox.configure(highlightbackground="#d9d9d9")
    root.txtLogBox.configure(highlightcolor="black")
    root.txtLogBox.configure(insertbackground="black")
    root.txtLogBox.configure(selectbackground="blue")
    root.txtLogBox.configure(selectforeground="white")
    root.txtLogBox.configure(wrap="word")

    root.Button2 = Button(root)
    root.Button2.place(relx=0.016, rely=0.919, height=27, width=64)
    root.Button2.configure(activebackground="#ececec")
    root.Button2.configure(activeforeground="#000000")
    root.Button2.configure(background="#d9d9d9")
    root.Button2.configure(disabledforeground="#a3a3a3")
    root.Button2.configure(foreground="#000000")
    root.Button2.configure(highlightbackground="#d9d9d9")
    root.Button2.configure(highlightcolor="black")
    root.Button2.configure(pady="0")
    root.Button2.configure(text='''Option''')

    root.Button3 = Button(root)
    root.Button3.place(relx=0.163, rely=0.919, height=27, width=68)
    root.Button3.configure(activebackground="#ececec")
    root.Button3.configure(activeforeground="#000000")
    root.Button3.configure(background="#d9d9d9")
    root.Button3.configure(disabledforeground="#a3a3a3")
    root.Button3.configure(foreground="#000000")
    root.Button3.configure(highlightbackground="#d9d9d9")
    root.Button3.configure(highlightcolor="black")
    root.Button3.configure(pady="0")
    root.Button3.configure(text='''Restart''')

    # Thread create and start
    gm = GameManager()
    init_canvas(root.Battler, gm.unit_slot)
    display_updater = DisplayUpdateThread(1, 'display_updater', 1)
    display_updater.start()
    root.after(0, core_loop)
    root.mainloop()






